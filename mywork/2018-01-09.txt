一、JVM
1）java运行时数据区
2）map数据结构
http://www.importnew.com/8658.html
使用ConcurrentHashMap替代hashtable
Hashtable【Hashtable是同步的，对同步有额外开销，不允许null键和null值，(元素无序)】
hashmap【Hashmap是一张hash表，不同步，允许null键和null值，健值没有排序(元素无序)，不允许重复键（自定义对象必须实现equals和hashcode方法）】
LindkedHashMap【是HashMap的子类，增加的特性是保证插入对象的顺序(元素有序)】
TreeMap【以红黑树为基础，按键的顺序排序，键对象必须要实现comparable接口(元素有序)】
3）List数据结构
ArrayList
【数组实现，元素快速随机访问(查找和遍历)，不适合插入和删除】
Vector
【和ArrayList一样，通过数组实现，但是Vector支持同步，需要额外开销，因此比ArrayList慢，
Vector中的public方法都添加了synchronized关键字，以确保方法同步】
LinkedList
【链表结构实现，适合动态插入和删除，随机访问和遍历比较慢】
4）ArrayList扩容原理
新增数据，如果ArrayList的容量不能满足需求时，那么将数组变为原容量的1.5倍
，然后将老数组数据拷贝到新数组里面
默认初始容量为10，也可以指定初始容量
5）HashMap工作原理
初始容量16，负载因子0.75，扩容为原来2倍容量
http://www.importnew.com/7099.html
HashMap简介
HashMap工作原理
键对象hashcode相同，存储，获取？
扩容？
并发扩容？
6）Set数据结构
http://www.cnblogs.com/Terry-greener/archive/2011/12/02/2271707.html
不允许包含相同的元素，否则add返回false，使用equals比较对象是否相等，最多一个空元素
无序，非同步

HashSet原理
http://www.cnblogs.com/xwdreamer/archive/2012/06/03/2532999.html
LinkedHashSet
TreeSet