! Configuration File for keepalived
# 全局定义块
global_defs {
   # email通知
   notification_email {
     acassen@firewall.loc
     failover@firewall.loc
     sysadmin@firewall.loc
   }
   notification_email_from Alexandre.Cassen@firewall.loc
   smtp_server 192.168.200.1
   smtp_connect_timeout 30
   router_id LVS_DEVEL
   vrrp_skip_check_adv_addr
   vrrp_strict
   vrrp_garp_interval 0
   vrrp_gna_interval 0
}
# VRRP实例定义块
vrrp_instance VI_1 {
    # 实例状态state，只有MASTER(工作状态)和BACKUP(备用状态)两种
    state MASTER
    # 通信接口interface，对外提供服务的网络接口，如eth0、eth1 
    interface eth0
    # 虚拟路由标识(同一个vrrp_instance的MASTER和BACKUP是一样的，并且在整个vrrp内是唯一的)
    virtual_router_id 51
    # 优先级，数值越大优先级越高，同一个vrrp_instance中，MASTER的优先级高于BACKUP
    priority 100
    # 同步通知间隔，单位秒，MASTER和BACKUP负载均衡器间同步检查时间间隔
    advert_int 1
    # 同一vrrp实例MASTER和BACKUP使用相同的密码才能正常通信
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    # 虚拟ip地址
    virtual_ipaddress {
        192.168.200.16
        192.168.200.17
        192.168.200.18
    }
}
# 虚拟服务器定义块
virtual_server 192.168.200.100 443 {
    # 健康检查时间间隔，单位是秒
    delay_loop 6
    # 负载均衡调度算法，互联网应用常使用wlc或rr
    lb_algo rr
    # 负载均衡转发规则，一般包括DR、NAT、TUN三种
    lb_kind NAT
    # 会话保持时间，单位是秒
    persistence_timeout 50
    # 转发协议，一般有tcp和udp两种
    protocol TCP
    # 真实服务器
    real_server 192.168.201.100 443 {
        # 数值越大，权重越高
        weight 1
        # 健康检查方式
        SSL_GET {
            url {
              path /
              digest ff20ad2481f97b1754ef3e12ecd3a9cc
            }
            url {
              path /mrtg/
              digest 9b3a0c85a887a256d6939da88aabd8cd
            }
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 10.10.10.2 1358 {
    delay_loop 6
    lb_algo rr
    lb_kind NAT
    persistence_timeout 50
    protocol TCP

    sorry_server 192.168.200.200 1358

    real_server 192.168.200.2 1358 {
        weight 1
        HTTP_GET {
            url {
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.200.3 1358 {
        weight 1
        HTTP_GET {
            url {
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334c
            }
            url {
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334c
            }
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 10.10.10.3 1358 {
    delay_loop 3
    lb_algo rr
    lb_kind NAT
    persistence_timeout 50
    protocol TCP

    real_server 192.168.200.4 1358 {
        weight 1
        HTTP_GET {
            url {
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.200.5 1358 {
        weight 1
        HTTP_GET {
            url {
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url {
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            retry 3
            delay_before_retry 3
        }
    }
}
