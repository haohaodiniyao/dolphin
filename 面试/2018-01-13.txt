###concurrenthashmap原理
http://www.infoq.com/cn/articles/ConcurrentHashMap/
###余数hash和一致性hash
http://blog.jobbole.com/98733/
###深度复制和浅度复制
https://www.cnblogs.com/avivahe/p/5710945.html
###哈希算法和哈希表
https://wenku.baidu.com/view/1ddde0d62e3f5727a4e96283.html
###库存系统和仓库系统设计
http://www.woshipm.com/pd/454390.html
###高访问量系统的静态化架构设计
http://www.doc88.com/p-4415470509157.html
###京东到家库存系统架构设计(库存扣减)
http://www.sohu.com/a/167327703_659464
###Redis有序集合(sorted set)存储用户订单集合
http://www.runoob.com/redis/redis-sorted-sets.html
###用redis实现锁机制的简单方法
set key value NX EX max-lock-time
http://www.redis.cn/commands/set.html
###分布式ID生成系统
http://www.sohu.com/a/205005675_659464
###支付网络异常，如何幂等性
http://blog.csdn.net/github_36032947/article/details/78386551
###数据库隔离级别、事务、锁
###java特种兵作者博客
http://blog.csdn.net/xieyuooo/article/list/2


下单->(1-会员中心查询会员信息)
->(2-查询系统的验舱验价(验舱价格和出售价格是否一致))
->(3-查询系统的航班详情)
->(4-查询系统的渠道禁售)
->(5-促销系统的促销信息)
->(6-查询产品信息)
->(7-查询保险信息)
->(8-票务系统的占位)
->(9-同步订单中心PGA并且打开支付开关(待支付状态))
->(10-前端调支付中心发起支付)
->(11-收到支付中心回调(支付状态为支付成功订单状态为出票中))
->(12-票务反馈出票成功)
定时任务支付超时处理(修改订单状态为取消)
定时任务票务占位超时处理

***订单流程研究之提交订单***
http://www.woshipm.com/ucd/246181.html
***取消订单设计***
http://www.woshipm.com/pd/801892.html
***如何基于购物场景来设计订单基础流程***
http://www.woshipm.com/pd/784483.html
***订单列表***
http://www.woshipm.com/pd/784631.html
***订单拆单***
http://www.woshipm.com/pd/597257.html
***高并发系统数据幂等性***
乐观锁只是在更新数据那一刻锁表，其他时间不锁表，所以相对于悲观锁，效率更高
请求IP、设备号、来源、会员号、流水号、
https://www.cnblogs.com/moonandstar08/p/5334865.html
***高并发的核心技术-幂等的实现方案
http://blog.csdn.net/summer_huan/article/details/76345909
***常用redis命令***
GETSET key value
http://www.redis.cn/commands/getset.html
64位有符号原子递增 INCR key
http://www.redis.cn/commands/incr.html
64位有符号原子递减 DECR key
http://www.redis.cn/commands/decr.html
过期时间 EXPIRE key seconds
http://www.redis.cn/commands/expire.html
keys都不存在,才sets MSETNX key value [key value...]
http://www.redis.cn/commands/msetnx.html

***扛住100亿次请求 如何做一个“有把握”的春晚红包系统？（PPT下载）
http://www.36dsj.com/archives/36513
***从银行转账失败到分布式事务：总结与思考
http://www.36dsj.com/archives/100020
***CAP理论与MongoDB一致性、可用性的一些思考
http://www.cnblogs.com/xybaby/p/6871764.html
***分布式系统原理介绍
http://www.open-open.com/doc/view/411f1bf61e33420c959e17b7ade75936
***分布式系统的事务处理
https://coolshell.cn/articles/10910.html
***大规模SOA系统中的分布事务处事_程立
https://wenku.baidu.com/view/be946bec0975f46527d3e104.html
http://www.infoq.com/cn/articles/distributed-system-transaction-processing
***Dynamo 译文 Dynamo: Amazon's Highly Available Key-value Store
http://blog.csdn.net/XingKong_678/article/details/51531455
https://kaimingwan.com/post/fen-bu-shi/fen-bu-shi-shi-wu-de-dian-xing-chu-li-fang-shi-2pc-tcc-yi-bu-que-bao-he-zui-da-nu-li-xing
***分布式事务之说说TCC事务
http://mini.eastday.com/a/161013075347792-3.html
***实现tcc分布式事务
https://github.com/changmingxie/tcc-transaction
***spring源码解析之事务篇
http://www.linkedkeeper.com/detail/blog.action?bid=1045
***DWZ富客户端框架（jUI）免费开源
https://www.w3cschool.cn/dwz_jui/
***同程凤凰缓存系统基于Redis的设计与实践
https://mp.weixin.qq.com/s/2FEbkas_m1WnYUqjVpMkWw
***分布式mysql分库分表中间件
http://gaoxianglong.github.io/shark/
***支付宝分布式事务测试方案
http://www.infoq.com/cn/articles/distributed-transaction-testing-scheme-of-zhifubao/
***分布式系统事务一致性解决方案
http://www.infoq.com/cn/articles/solution-of-distributed-system-transaction-consistency?utm_source=infoq&utm_campaign=user_page&utm_medium=link
